{"remainingRequest":"/Users/oga0927/Desktop/Book_Library_Vue.js/bookapp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/oga0927/Desktop/Book_Library_Vue.js/bookapp/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/oga0927/Desktop/Book_Library_Vue.js/bookapp/src/App.vue","mtime":1618902622209},{"path":"/Users/oga0927/Desktop/Book_Library_Vue.js/bookapp/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/oga0927/Desktop/Book_Library_Vue.js/bookapp/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/oga0927/Desktop/Book_Library_Vue.js/bookapp/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/oga0927/Desktop/Book_Library_Vue.js/bookapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/oga0927/Desktop/Book_Library_Vue.js/bookapp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAaW1wb3J0ICIuL2Fzc2V0cy9jc3MvcmVzZXQuY3NzIjsKQGltcG9ydCAiLi9hc3NldHMvY3NzL3N0eWxlLmNzcyI7Cg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkGA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <v-app>\n    <app-header/>\n\n    <v-main>\n      <!-- App.vueに入れることで自動でcontainerに割り当てられる -->\n      <v-container>\n        <router-view\n        :books=\"books\"\n        @add-book-list=\"addBooks\"\n        />\n        <!-- @update-book-info=\"updateBookInfo\" -->\n        <!-- @delete-local-storage=\"deleteLocalStorage\" -->\n      </v-container>\n    </v-main>\n  <app-footer/>\n\n  </v-app>\n</template>\n\n<script>\nimport AppHeader from '@/global/AppHeader'\nimport AppFooter from '@/global/AppFooter'\n\nconst STORAGE_KEY = 'books'\n\nexport default {\n  name: 'App',\n\n  components: {\n    AppHeader,\n    AppFooter,\n    // Home\n  },\n\n  data(){\n    return {\n      books: [],\n    }\n  },\n  mounted() {\n    // ローカルストレージにアイテムがあれば\n    if (localStorage.getItem(STORAGE_KEY)) {\n      try {\n        // JSON.parseで値を持ってきて、this.booksにデータを渡す\n        this.books = JSON.parse(localStorage.getItem(STORAGE_KEY));\n      } catch(e) {\n        localStorage.removeItem(STORAGE_KEY);\n      }\n    }\n  },\n  methods: {\n    // (e)で子コンポーネントからデータを受け取る\n    addBooks(e) {\n      \n      // 追加があればpushして\n      this.books.push({\n        id: this.books.length,\n        // 子コンポーネント\n        title: e.title,\n        image: e.image,\n        // 説明\n        discription: e.discription,\n        // 読んだ日、感想\n        readDate: '',\n        // メモ\n        memo: '',\n        learn: '',\n        important: '',\n        examples: '',\n        different: '',\n        userId: this.$store.state.userId,\n      })\n      // this.saveBooksに保存する\n      this.saveBooks();\n\n      // 最新のidが入った状態\n      this.goToEditPage(this.books.slice(-1)[0].id)\n\n    },\n    removeBook(x) {\n      this.books.splice(x, 1);\n      this.saveBooks();\n    },\n    saveBooks() {\n      const parsed = JSON.stringify(this.books);\n      localStorage.setItem(STORAGE_KEY, parsed);\n    },\n    // 最新のid\n    goToEditPage(id) {\n      // ページの切り替え\n      this.$router.push(`/edit/${id}`)\n    },\n  }\n};\n</script>\n\n<style>\n@import \"./assets/css/reset.css\";\n@import \"./assets/css/style.css\";\n</style>"]}]}